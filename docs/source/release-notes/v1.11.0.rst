InfinniPlatform 1.11.0
======================

Данный выпуск ориентирован на улучшение общей структуры проекта и стабилизацию существующего
функционала. Основной целью при этом является выделение специфической и зависимой от окружения
функциональности в отдельные пакеты, которые можно будет подключать в своем решении, если в этом
есть необходимость. До настоящего момента большая часть функциональности платформы предоставлялась
"из коробки" целиком и включалась в приложение даже в том случае, если в этом не было необходимости.

Печатные представления
----------------------

Механизм :doc:`печатных представлений </15-print-view/index>` был исключен из стандартного функционала
InfinniPlatform и теперь предоставляется в виде отдельного NuGet-пакета ``InfinniPlatform.PrintView``.
Теперь, чтобы добавить функциональность печатных представлений в свой проект, необходимо установить
данный пакет, выполнив следующую команду в `Package Manager Console`_.

.. code-block:: bash

    PM> Install-Package InfinniPlatform.PrintView

В связи с указанными изменениями ранее используемый интерфейс ``InfinniPlatform.Sdk.PrintView.IPrintViewApi``
был удален. Вместо него следует использовать ``InfinniPlatform.PrintView.Contract.IPrintViewBuilder``,
определенный в пакете ``InfinniPlatform.PrintView``. Новая функциональность не требует от разработчика
хранения шаблонов печатных представлений в определенном каталоге на диске. Теперь шаблон печатного
представления можно хранить где угодно, например, в ресурсах самого приложения.

.. code-block:: csharp
   :emphasize-lines: 17,20

    IPrintViewBuilder printViewBuilder;

    ...

    // Поток для записи печатного представления
    Stream printView;

    // Данные печатного представления
    object dataSource;

    // Сборка, содержащая в ресурсах шаблон печатного представления
    Assembly resourceAssembly;

    ...

    // Получение шаблона печатного представления по имени ресурса
    Func<Stream> template = () => resourceAssembly.GetManifestResourceStream("<PRINT VIEW RESOURCE>");

    // Создание печатного представления по шаблону и данным
    await printViewBuilder.Build(printView, template, dataSource, PrintViewFileFormat.Pdf);

Для оптимизации работы HTTP-обработчиков, результатом работы которых являются печатные представления,
был добавлен класс ``InfinniPlatform.PrintView.Contract.PrintViewHttpResponse``. Благодаря этому формируемое
представление сразу выводится в выходной поток запроса, минимизируя время ожидания ответа и потребление
памяти на сервере (по сравнению с предыдущей реализацией).

.. code-block:: csharp
   :emphasize-lines: 14

    IPrintViewBuilder printViewBuilder;

    ...

    // Шаблон печатного представления
    Func<Stream> template;

    // Данные печатного представления
    object dataSource;

    ...

    // HTTP-ответ с печатным представлением
    var response = new PrintViewHttpResponse(printViewBuilder, template, dataSource);


Хостинг статического контента
-----------------------------

Появилась возможность хостинга встроенных ресурсов приложения. Это позволит, например, хранить файлы
представлений не в отдельных файлах на диске, а в соответствующей сборке (Embedded Resource). Подробнее
о настройке см. статью :ref:`"Хостинг статического контента" <resources-hosting>`.


InfinniPlatform.Watcher
-----------------------

Расширение ``InfinniPlatform.Watcher`` перенесено в проект платформы в качестве пакета расширения.
Теперь новые версии этого пакета будут выходить вместе с новыми версиями ``InfinniPlatform``.


.. _`Package Manager Console`: http://docs.nuget.org/consume/package-manager-console